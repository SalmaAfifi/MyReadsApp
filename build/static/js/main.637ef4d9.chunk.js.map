{"version":3,"sources":["BooksAPI.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","BooksApp","state","books","_this2","this","fetch","concat","then","res","json","data","setState","react_default","a","createElement","Fragment","console","log","title","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"iNACMA,QAAM,yCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GCWJS,oNAjBbC,MAAQ,CAACC,MAAM,uFAEK,IAAAC,EAAAC,KDapBC,MAAK,GAAAC,OAAIhB,EAAJ,UAAiB,CAAEO,YACrBU,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKR,QCbhBK,KAAK,SAACL,GACLC,EAAKQ,SAAS,iBAAO,CACnBT,8CAQE,OAAQU,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAAGC,QAAQC,IAAIb,KAAKH,MAAMC,MAAMgB,eAf7BC,IAAMC,kBCC7BC,IAASC,OAAOV,EAAAC,EAAAC,cAACS,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.637ef4d9.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {books:[]}\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll()\r\n      .then((books) => {\r\n        this.setState(() => ({\r\n          books\r\n        }))\r\n      })\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {return (<>{console.log(this.state.books.title)}</>) }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}